// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using maganzinchik.DAL;

#nullable disable

namespace maganzinchik.DAL.Migrations
{
    [DbContext(typeof(SneakersShopContext))]
    [Migration("20231201183847_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("maganzinchik.DAL.domain.Brand", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("id");

                    b.Property<ulong>("ManufacturerId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("manufacturer_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ManufacturerId" }, "manufacturer_id");

                    b.HasIndex(new[] { "Name" }, "name")
                        .IsUnique();

                    b.ToTable("brand", (string)null);
                });

            modelBuilder.Entity("maganzinchik.DAL.domain.Cloth", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("cloth", (string)null);
                });

            modelBuilder.Entity("maganzinchik.DAL.domain.Manufacturer", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("manufacturer", (string)null);
                });

            modelBuilder.Entity("maganzinchik.DAL.domain.Photo", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("photo", (string)null);
                });

            modelBuilder.Entity("maganzinchik.DAL.domain.Sneaker", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("id");

                    b.Property<ulong>("BrandId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("brand_id");

                    b.Property<ulong>("ClothId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("cloth_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("price");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("release_date");

                    b.Property<ulong>("SnSizeType")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("sn_size_type");

                    b.Property<double>("Weight")
                        .HasColumnType("double(8,2)")
                        .HasColumnName("weight");

                    b.Property<ulong>("ZipTypeId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("zip_type_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "BrandId" }, "brand_id");

                    b.HasIndex(new[] { "ClothId" }, "cloth_id");

                    b.HasIndex(new[] { "SnSizeType" }, "sn_size_type");

                    b.HasIndex(new[] { "ZipTypeId" }, "zip_type_id");

                    b.ToTable("sneaker", (string)null);
                });

            modelBuilder.Entity("maganzinchik.DAL.domain.SneakerSize", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("id");

                    b.Property<double>("CmSize")
                        .HasColumnType("double(3,1)")
                        .HasColumnName("cm_size");

                    b.Property<double>("EuSize")
                        .HasColumnType("double(3,1)")
                        .HasColumnName("eu_size");

                    b.Property<double>("UsSize")
                        .HasColumnType("double(3,1)")
                        .HasColumnName("us_size");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("sneaker_size", (string)null);
                });

            modelBuilder.Entity("maganzinchik.DAL.domain.SneakersPhoto", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("id");

                    b.Property<ulong>("PhotoId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("photo_id");

                    b.Property<ulong>("SneakerId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("sneaker_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PhotoId" }, "photo_id");

                    b.HasIndex(new[] { "SneakerId" }, "sneaker_id");

                    b.ToTable("sneakers_photo", (string)null);
                });

            modelBuilder.Entity("maganzinchik.DAL.domain.ZipType", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("zip_type", (string)null);
                });

            modelBuilder.Entity("maganzinchik.DAL.domain.Brand", b =>
                {
                    b.HasOne("maganzinchik.DAL.domain.Manufacturer", "Manufacturer")
                        .WithMany("Brands")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("brand_ibfk_1");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("maganzinchik.DAL.domain.Sneaker", b =>
                {
                    b.HasOne("maganzinchik.DAL.domain.Brand", "Brand")
                        .WithMany("Sneakers")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sneaker_ibfk_1");

                    b.HasOne("maganzinchik.DAL.domain.Cloth", "Cloth")
                        .WithMany("Sneakers")
                        .HasForeignKey("ClothId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sneaker_ibfk_2");

                    b.HasOne("maganzinchik.DAL.domain.SneakerSize", "SnSizeTypeNavigation")
                        .WithMany("Sneakers")
                        .HasForeignKey("SnSizeType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sneaker_ibfk_4");

                    b.HasOne("maganzinchik.DAL.domain.ZipType", "ZipType")
                        .WithMany("Sneakers")
                        .HasForeignKey("ZipTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sneaker_ibfk_3");

                    b.Navigation("Brand");

                    b.Navigation("Cloth");

                    b.Navigation("SnSizeTypeNavigation");

                    b.Navigation("ZipType");
                });

            modelBuilder.Entity("maganzinchik.DAL.domain.SneakersPhoto", b =>
                {
                    b.HasOne("maganzinchik.DAL.domain.Photo", "Photo")
                        .WithMany("SneakersPhotos")
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sneakers_photo_ibfk_2");

                    b.HasOne("maganzinchik.DAL.domain.Sneaker", "Sneaker")
                        .WithMany("SneakersPhotos")
                        .HasForeignKey("SneakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("sneakers_photo_ibfk_1");

                    b.Navigation("Photo");

                    b.Navigation("Sneaker");
                });

            modelBuilder.Entity("maganzinchik.DAL.domain.Brand", b =>
                {
                    b.Navigation("Sneakers");
                });

            modelBuilder.Entity("maganzinchik.DAL.domain.Cloth", b =>
                {
                    b.Navigation("Sneakers");
                });

            modelBuilder.Entity("maganzinchik.DAL.domain.Manufacturer", b =>
                {
                    b.Navigation("Brands");
                });

            modelBuilder.Entity("maganzinchik.DAL.domain.Photo", b =>
                {
                    b.Navigation("SneakersPhotos");
                });

            modelBuilder.Entity("maganzinchik.DAL.domain.Sneaker", b =>
                {
                    b.Navigation("SneakersPhotos");
                });

            modelBuilder.Entity("maganzinchik.DAL.domain.SneakerSize", b =>
                {
                    b.Navigation("Sneakers");
                });

            modelBuilder.Entity("maganzinchik.DAL.domain.ZipType", b =>
                {
                    b.Navigation("Sneakers");
                });
#pragma warning restore 612, 618
        }
    }
}
